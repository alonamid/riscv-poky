--- ray-ray-0.2.1/python/setup.py	2017-11-27 02:15:06.007324417 +0000
+++ ray-ray-0.2.1-new/python/setup.py	2017-11-27 19:26:22.919721180 +0000
@@ -15,19 +15,29 @@
 # MANIFEST.in gets applied at the very beginning when setup.py runs
 # before these files have been created, so we have to move the files
 # manually.
-ray_files = [
-    "ray/core/src/common/thirdparty/redis/src/redis-server",
-    "ray/core/src/common/redis_module/libray_redis_module.so",
-    "ray/core/src/plasma/plasma_store",
-    "ray/core/src/plasma/plasma_manager",
-    "ray/core/src/local_scheduler/local_scheduler",
-    "ray/core/src/local_scheduler/liblocal_scheduler_library.so",
-    "ray/core/src/global_scheduler/global_scheduler",
-    "ray/core/src/catapult_files/index.html",
-    "ray/core/src/catapult_files/trace_viewer_full.html",
-    "ray/WebUI.ipynb"
-]
+#ray_files = [
+#    "ray/core/src/common/thirdparty/redis/src/redis-server",
+#    "ray/core/src/common/redis_module/libray_redis_module.so",
+#    "ray/core/src/plasma/plasma_store",
+#    "ray/core/src/plasma/plasma_manager",
+#    "ray/core/src/local_scheduler/local_scheduler",
+#    "ray/core/src/local_scheduler/liblocal_scheduler_library.so",
+#    "ray/core/src/global_scheduler/global_scheduler"
+#    "ray/core/src/catapult_files/index.html",
+#    "ray/core/src/catapult_files/trace_viewer_full.html",
+#    "ray/WebUI.ipynb"
+#]
 
+setup_dir_path = os.path.dirname(os.path.realpath(__file__))
+ray_files = [
+    os.path.join(setup_dir_path, "../../../../ray/0.2.1-r0/build/src/common/thirdparty/redis/src/redis-server"),
+    os.path.join(setup_dir_path, "../../../../ray/0.2.1-r0/build/src/common/redis_module/libray_redis_module.so"),
+    os.path.join(setup_dir_path, "../../../../ray/0.2.1-r0/build/src/plasma/plasma_store"),
+    os.path.join(setup_dir_path, "../../../../ray/0.2.1-r0/build/src/plasma/plasma_manager"),
+    os.path.join(setup_dir_path, "../../../../ray/0.2.1-r0/build/src/local_scheduler/local_scheduler"),
+    os.path.join(setup_dir_path, "../../../../ray/0.2.1-r0/build/src/local_scheduler/liblocal_scheduler_library.so"),
+    os.path.join(setup_dir_path, "../../../../ray/0.2.1-r0/build/src/global_scheduler/global_scheduler")
+] 
 
 class build_ext(_build_ext.build_ext):
     def run(self):
@@ -35,33 +45,38 @@
         # version of Python to build pyarrow inside the build.sh script. Note
         # that certain flags will not be passed along such as --user or sudo.
         # TODO(rkn): Fix this.
-        subprocess.check_call(["../build.sh", sys.executable])
+        #subprocess.check_call(["../build.sh", sys.executable])
 
         # We also need to install pyarrow along with Ray, so make sure that the
         # relevant non-Python pyarrow files get copied.
-        pyarrow_files = [
-            os.path.join("ray/pyarrow_files/pyarrow", filename)
-            for filename in os.listdir("./ray/pyarrow_files/pyarrow")
-            if not os.path.isdir(os.path.join("ray/pyarrow_files/pyarrow",
-                                              filename))]
+        #pyarrow_files = [
+        #    os.path.join("ray/pyarrow_files/pyarrow", filename)
+        #    for filename in os.listdir("./ray/pyarrow_files/pyarrow")
+        #    if not os.path.isdir(os.path.join("ray/pyarrow_files/pyarrow",
+        #                                      filename))]
+
+        #files_to_include = ray_files + pyarrow_files
+
+        #for filename in files_to_include:
+        #    self.move_file(filename)
 
-        files_to_include = ray_files + pyarrow_files
+        for filename in ray_files:
+            self.move_file(filename,len(setup_dir_path)+32)
 
-        for filename in files_to_include:
-            self.move_file(filename)
         # Copy over the autogenerated flatbuffer Python bindings.
-        generated_python_directory = "ray/core/generated"
+        generated_python_directory = os.path.join(setup_dir_path, "../../../../ray/0.2.1-r0/build/generated/")
         for filename in os.listdir(generated_python_directory):
             if filename[-3:] == ".py":
                 self.move_file(os.path.join(generated_python_directory,
-                                            filename))
+                                            filename),len(setup_dir_path)+32)
 
-    def move_file(self, filename):
+    def move_file(self, filename, prefix_ind):
         # TODO(rkn): This feels very brittle. It may not handle all cases. See
         # https://github.com/apache/arrow/blob/master/python/setup.py for an
         # example.
         source = filename
-        destination = os.path.join(self.build_lib, filename)
+        dest_filename = os.path.join("ray/core/", filename[prefix_ind:])
+        destination = os.path.join(self.build_lib, dest_filename)
         # Create the target directory if it doesn't already exist.
         parent_directory = os.path.dirname(destination)
         if not os.path.exists(parent_directory):
